# =============================================================================
# PUBLIC INGRESS CONFIGURATION FOR JUDGES ACCESS
# =============================================================================
# 
# This Ingress configuration exposes all Bank of Anthos AI Credit Pre-Approval
# system endpoints publicly for hackathon judges to access and evaluate.
#
# PUBLIC ENDPOINTS:
# - Main AI Frontend: /
# - Backend API: /api/
# - AI Agents: /agents/
# - ADK Framework: /adk/
# - kubectl-ai: /kubectl-ai/
# - Health Checks: /health/
#
# FEATURES:
# - SSL/TLS termination with Google-managed certificates
# - Clean URL routing for professional presentation
# - Health check endpoints for system monitoring
# - API documentation endpoints
# - Load balancing across multiple replicas
#
# DEPLOYMENT:
# kubectl apply -f deployments/ingress/public-ingress.yaml
#
# =============================================================================

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: bank-ai-public-ingress
  namespace: default
  labels:
    app: bank-ai-system
    component: public-ingress
    version: v1.0.0
  annotations:
    # Google Cloud Load Balancer
    kubernetes.io/ingress.class: "gce"
    
    # SSL Configuration
    networking.gke.io/managed-certificates: "bank-ai-ssl-cert"
    kubernetes.io/ingress.allow-http: "true"
    
    # Load Balancer Settings
    cloud.google.com/load-balancer-type: "External"
    
    # CORS Headers for API access
    nginx.ingress.kubernetes.io/cors-allow-origin: "*"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-headers: "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization"
    
    # Rate Limiting
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
spec:
  rules:
  - host: bank-ai-demo.example.com  # Replace with your actual domain
    http:
      paths:
      # =================================================================
      # MAIN AI FRONTEND - Primary User Interface
      # =================================================================
      - path: /
        pathType: Prefix
        backend:
          service:
            name: frontend-service
            port:
              number: 80
      
      # =================================================================
      # BACKEND API - Main Orchestration Service
      # =================================================================
      - path: /api
        pathType: Prefix
        backend:
          service:
            name: backend-service
            port:
              number: 80
      
      # =================================================================
      # AI AGENTS - Individual Agent Access
      # =================================================================
      - path: /agents/perks
        pathType: Prefix
        backend:
          service:
            name: perks-agent-real
            port:
              number: 8085
      
      - path: /agents/risk
        pathType: Prefix
        backend:
          service:
            name: enhanced-risk-agent
            port:
              number: 8087
      
      - path: /agents/terms
        pathType: Prefix
        backend:
          service:
            name: terms-agent-simple
            port:
              number: 8086
      
      - path: /agents/challenger
        pathType: Prefix
        backend:
          service:
            name: challenger-agent
            port:
              number: 8088
      
      - path: /agents/policy
        pathType: Prefix
        backend:
          service:
            name: enhanced-policy-agent
            port:
              number: 8090
      
      - path: /agents/mcp
        pathType: Prefix
        backend:
          service:
            name: mcp-server
            port:
              number: 8089
      
      # =================================================================
      # ADK FRAMEWORK - Agent Development Kit
      # =================================================================
      - path: /adk
        pathType: Prefix
        backend:
          service:
            name: adk-orchestrator
            port:
              number: 8080
      
      # =================================================================
      # KUBECTL-AI - Intelligent Kubernetes Operations
      # =================================================================
      - path: /kubectl-ai
        pathType: Prefix
        backend:
          service:
            name: kubectl-ai-manager
            port:
              number: 8080
      
      # =================================================================
      # HEALTH CHECKS - System Monitoring
      # =================================================================
      - path: /health/backend
        pathType: Exact
        backend:
          service:
            name: backend-service
            port:
              number: 80
      
      - path: /health/agents
        pathType: Prefix
        backend:
          service:
            name: backend-service
            port:
              number: 80

  # Default backend for unmatched paths
  defaultBackend:
    service:
      name: frontend-service
      port:
        number: 80

---
# =============================================================================
# MANAGED SSL CERTIFICATE
# =============================================================================

apiVersion: networking.gke.io/v1
kind: ManagedCertificate
metadata:
  name: bank-ai-ssl-cert
  namespace: default
  labels:
    app: bank-ai-system
    component: ssl-certificate
spec:
  domains:
  - bank-ai-demo.example.com  # Replace with your actual domain

---
# =============================================================================
# SIMPLE HTTP INGRESS (NO SSL) - FOR IMMEDIATE ACCESS
# =============================================================================

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: bank-ai-simple-ingress
  namespace: default
  labels:
    app: bank-ai-system
    component: simple-ingress
    version: v1.0.0
  annotations:
    kubernetes.io/ingress.class: "gce"
    kubernetes.io/ingress.allow-http: "true"
    cloud.google.com/load-balancer-type: "External"
spec:
  rules:
  - http:
      paths:
      # Main AI Frontend
      - path: /
        pathType: Prefix
        backend:
          service:
            name: frontend-service
            port:
              number: 80
      
      # Backend API
      - path: /api
        pathType: Prefix
        backend:
          service:
            name: backend-service
            port:
              number: 80
      
      # Health Check Endpoint
      - path: /health
        pathType: Prefix
        backend:
          service:
            name: backend-service
            port:
              number: 80
      
      # AI Agents Endpoints
      - path: /agents
        pathType: Prefix
        backend:
          service:
            name: backend-service
            port:
              number: 80

---
# =============================================================================
# INGRESS DOCUMENTATION SERVICE
# =============================================================================

apiVersion: v1
kind: ConfigMap
metadata:
  name: ingress-documentation
  namespace: default
  labels:
    app: bank-ai-system
    component: documentation
data:
  index.html: |
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Bank of Anthos AI Credit System - API Documentation</title>
        <style>
            body { font-family: 'Segoe UI', sans-serif; margin: 0; padding: 20px; background: #f5f5f5; }
            .container { max-width: 1200px; margin: 0 auto; background: white; padding: 30px; border-radius: 8px; box-shadow: 0 2px 10px rgba(0,0,0,0.1); }
            h1 { color: #1976d2; border-bottom: 3px solid #1976d2; padding-bottom: 10px; }
            h2 { color: #424242; margin-top: 30px; }
            .endpoint { background: #f8f9fa; padding: 15px; margin: 10px 0; border-left: 4px solid #4caf50; border-radius: 4px; }
            .method { background: #2196f3; color: white; padding: 4px 8px; border-radius: 4px; font-size: 12px; font-weight: bold; }
            .url { font-family: monospace; background: #e3f2fd; padding: 8px; border-radius: 4px; margin: 8px 0; }
            .description { color: #666; margin: 8px 0; }
            .tech-stack { display: grid; grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); gap: 15px; margin: 20px 0; }
            .tech-item { background: #e8f5e8; padding: 15px; border-radius: 8px; text-align: center; }
            .status { color: #4caf50; font-weight: bold; }
        </style>
    </head>
    <body>
        <div class="container">
            <h1>üè¶ Bank of Anthos AI Credit Pre-Approval System</h1>
            
            <div style="background: #e3f2fd; padding: 20px; border-radius: 8px; margin: 20px 0;">
                <h3>üéØ For Hackathon Judges</h3>
                <p>This is a comprehensive AI-powered credit pre-approval system built on GKE with advanced agent orchestration, real-time data processing, and intelligent decision-making capabilities.</p>
                <p><strong>Status:</strong> <span class="status">‚úÖ All Systems Operational</span></p>
            </div>

            <h2>üåê Public Endpoints</h2>
            
            <div class="endpoint">
                <span class="method">GET</span>
                <div class="url">/ (Main AI Frontend)</div>
                <div class="description">Interactive credit pre-approval interface with real-time AI agent visualization</div>
            </div>
            
            <div class="endpoint">
                <span class="method">GET</span>
                <div class="url">/api/real-preapproval?username=testuser</div>
                <div class="description">Main API endpoint - Complete AI-powered credit analysis with all agent results</div>
            </div>
            
            <div class="endpoint">
                <span class="method">GET</span>
                <div class="url">/health</div>
                <div class="description">System health check - Shows status of all AI agents and services</div>
            </div>

            <h2>ü§ñ AI Agents</h2>
            
            <div class="endpoint">
                <span class="method">POST</span>
                <div class="url">/agents/risk/assess</div>
                <div class="description">Risk Agent - Credit scoring and approval decisions with Gemini AI reasoning</div>
            </div>
            
            <div class="endpoint">
                <span class="method">POST</span>
                <div class="url">/agents/terms/terms</div>
                <div class="description">Terms Agent - Intelligent credit terms generation with guardrails</div>
            </div>
            
            <div class="endpoint">
                <span class="method">POST</span>
                <div class="url">/agents/perks/generate-perks</div>
                <div class="description">Perks Agent - Personalized rewards based on spending patterns</div>
            </div>
            
            <div class="endpoint">
                <span class="method">POST</span>
                <div class="url">/agents/challenger/challenge-terms</div>
                <div class="description">Challenger Agent - Bank profitability optimization and counter-offers</div>
            </div>
            
            <div class="endpoint">
                <span class="method">GET</span>
                <div class="url">/agents/policy/documents</div>
                <div class="description">Policy Agent - Legal document generation with regulatory compliance</div>
            </div>

            <h2>üõ†Ô∏è Advanced Features</h2>
            
            <div class="endpoint">
                <span class="method">GET</span>
                <div class="url">/adk/health</div>
                <div class="description">Agent Development Kit - Standardized agent interfaces and lifecycle management</div>
            </div>
            
            <div class="endpoint">
                <span class="method">POST</span>
                <div class="url">/kubectl-ai/execute</div>
                <div class="description">kubectl-ai - Natural language Kubernetes operations</div>
            </div>

            <h2>üèóÔ∏è Technology Stack</h2>
            <div class="tech-stack">
                <div class="tech-item">
                    <strong>‚úÖ Google Kubernetes Engine</strong><br>
                    Microservices orchestration
                </div>
                <div class="tech-item">
                    <strong>‚úÖ Google Gemini AI</strong><br>
                    Intelligent decision making
                </div>
                <div class="tech-item">
                    <strong>‚úÖ Agent Development Kit</strong><br>
                    Standardized agent framework
                </div>
                <div class="tech-item">
                    <strong>‚úÖ Model Context Protocol</strong><br>
                    Banking policy integration
                </div>
                <div class="tech-item">
                    <strong>‚úÖ Agent2Agent Protocol</strong><br>
                    Multi-agent orchestration
                </div>
                <div class="tech-item">
                    <strong>‚úÖ kubectl-ai</strong><br>
                    Intelligent K8s operations
                </div>
            </div>

            <h2>üìä System Architecture</h2>
            <p>The system demonstrates advanced AI agent orchestration with:</p>
            <ul>
                <li><strong>Real-time Integration:</strong> Fetches live data from Bank of Anthos services</li>
                <li><strong>AI Agent Pipeline:</strong> Risk ‚Üí Terms ‚Üí Perks ‚Üí Challenger ‚Üí Policy</li>
                <li><strong>Intelligent Optimization:</strong> Balances user value with bank profitability</li>
                <li><strong>Comprehensive Guardrails:</strong> Prevents undefined values and unrealistic terms</li>
                <li><strong>Production-Ready:</strong> Health monitoring, caching, retry logic, graceful degradation</li>
            </ul>

            <div style="background: #f3e5f5; padding: 20px; border-radius: 8px; margin: 20px 0; text-align: center;">
                <h3>üéñÔ∏è Hackathon Compliance</h3>
                <p>This system implements <strong>ALL required and optional technologies</strong> including GKE, Gemini AI, ADK, MCP, A2A, kubectl-ai, and Gemini CLI integration.</p>
            </div>
        </div>
    </body>
    </html>

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ingress-documentation
  namespace: default
  labels:
    app: ingress-documentation
    component: documentation
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ingress-documentation
  template:
    metadata:
      labels:
        app: ingress-documentation
        component: documentation
    spec:
      containers:
      - name: nginx
        image: nginx:alpine
        ports:
        - containerPort: 80
          name: http
        volumeMounts:
        - name: documentation
          mountPath: /usr/share/nginx/html
        resources:
          requests:
            memory: "32Mi"
            cpu: "10m"
          limits:
            memory: "64Mi"
            cpu: "50m"
      volumes:
      - name: documentation
        configMap:
          name: ingress-documentation

---
apiVersion: v1
kind: Service
metadata:
  name: ingress-documentation
  namespace: default
  labels:
    app: ingress-documentation
    component: documentation
spec:
  selector:
    app: ingress-documentation
  ports:
  - port: 80
    targetPort: 80
    protocol: TCP
    name: http
  type: ClusterIP
