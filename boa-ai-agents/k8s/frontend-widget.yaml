apiVersion: v1
kind: ConfigMap
metadata:
  name: frontend-widget-config
  namespace: default
  labels:
    app: frontend-widget
    component: config
data:
  # Bank of Anthos service URLs (internal cluster)
  BALANCEREADER_URL: "http://balancereader:8080"
  TRANSACTIONHISTORY_URL: "http://transactionhistory:8080" 
  USERSERVICE_URL: "http://userservice:8080"
  CONTACTS_URL: "http://contacts:8080"
  
  # App Configuration
  FLASK_ENV: "production"
  LOG_LEVEL: "INFO"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend-widget
  namespace: default
  labels:
    app: frontend-widget
    component: ai-demo
    tier: web
spec:
  replicas: 2
  selector:
    matchLabels:
      app: frontend-widget
  template:
    metadata:
      labels:
        app: frontend-widget
        component: ai-demo
        tier: web
    spec:
      containers:
      - name: frontend-widget
        image: python:3.12-slim
        command: ["/bin/bash"]
        args:
          - -c
          - |
            apt-get update && apt-get install -y curl git
            pip install flask flask-cors requests google-generativeai
            cd /app
            python enhanced-demo-cloud-fixed.py
        ports:
        - containerPort: 8080
          name: http
        env:
        - name: PORT
          value: "8080"
        - name: GEMINI_API_KEY
          valueFrom:
            secretKeyRef:
              name: ai-secrets
              key: gemini-api-key
              optional: true
        envFrom:
        - configMapRef:
            name: frontend-widget-config
        volumeMounts:
        - name: app-code
          mountPath: /app
        - name: html-files
          mountPath: /app/index.html
          subPath: index.html
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
      volumes:
      - name: app-code
        configMap:
          name: frontend-widget-code-fixed
          defaultMode: 0755
      - name: html-files
        configMap:
          name: frontend-widget-html
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: frontend-widget
  namespace: default
  labels:
    app: frontend-widget
    component: ai-demo
spec:
  type: LoadBalancer
  ports:
  - name: http
    port: 80
    targetPort: 8080
    protocol: TCP
  selector:
    app: frontend-widget
---
apiVersion: v1
kind: Secret
metadata:
  name: ai-secrets
  namespace: default
  labels:
    app: frontend-widget
type: Opaque
data:
  # Base64 encoded Gemini API key - replace with your actual key
  # This is the demo key, encode your real key: echo -n "your-key" | base64
  gemini-api-key: QUl6YVN5Q2VpenpVcEU2TDZiNC1XUFlDUW9DVm9Ta1ZBWUVWM1J3  # demo key encoded
